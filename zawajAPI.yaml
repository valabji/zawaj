swagger: '2.0'
info:
  description: |
    Zawaj Website API by Moa & Valabji at
    [Github repo, #Zawaj](https://github.com/valabji/zawaj).
  version: 1.0.0
  title: Zawaj Website
  contact:
    email: valabji@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: petstore.swagger.io
# basePath: /v2
tags:
- name: users
  description: Website Users
- name: settings
  description: Website Settings
- name: city
  description: Cities
- name: bundles
  description: Subscription Bundles
- name: favorites
  description: Users favorites users ( Don't Use )
# schemes:
# - http
paths:
  /city:
    get:
      tags:
      - city
      summary: Get Cities List
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Response
        405:
          description: Invalid input
    post:
      tags:
      - city
      summary: Add City
      operationId: addCity
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Some description
        required: true
        schema:
          $ref: '#/definitions/City'
      responses:
        200:
          description: Response
        405:
          description: Invalid input
  /city/{id}:
    patch:
      tags:
      - city
      summary: edit city
      operationId: editCity
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: integer
        description: City ID
        required: true
      - in: body
        name: body
        description: City name
        required: true
        schema:
          $ref: '#/definitions/City'
      responses:
        200:
          description: Response
        405:
          description: Invalid input
    delete:
      tags:
      - city
      summary: delete city
      operationId: deleteCity
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: integer
        description: City ID
        required: true
      - in: body
        name: body
        description: Some description
        required: true
        schema:
          $ref: '#/definitions/City'
      responses:
        200:
          description: Response
        405:
          description: Invalid input
  /bundles:
    get:
      tags:
      - bundles
      summary: Get Bundles List
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Response
        405:
          description: Invalid input
    post:
      tags:
      - bundles
      summary: Add Bundle
      operationId: addBundle
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Bundle'
      responses:
        200:
          description: Response
        405:
          description: Invalid input
  /bundles/{id}:
    patch:
      tags:
      - bundles
      summary: edit Bundle
      operationId: editBundle
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: integer
        description: Bundle ID
        required: true
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Bundle'
      responses:
        200:
          description: Response
        405:
          description: Invalid input
    delete:
      tags:
      - bundles
      summary: delete Bundle
      operationId: deleteBundle
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: integer
        description: Bundle ID
        required: true
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Bundle'
      responses:
        200:
          description: Response
        405:
          description: Invalid input
  /settings:
    get:
      tags:
      - settings
      summary: Get Settings List
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Response
        405:
          description: Invalid input
    post:
      tags:
      - settings
      summary: Add Settings
      operationId: addSettings
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Settings'
      responses:
        200:
          description: Response
        405:
          description: Invalid input
  /settings/{id}:
    patch:
      tags:
      - settings
      summary: edit Settings
      operationId: editSettings
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: integer
        description: Settings ID
        required: true
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Settings'
      responses:
        200:
          description: Response
        405:
          description: Invalid input
    delete:
      tags:
      - settings
      summary: delete Settings
      operationId: deleteSettings
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: id
        type: integer
        description: Settings ID
        required: true
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Settings'
      responses:
        200:
          description: Response
        405:
          description: Invalid input
  /users:
    post:
      tags:
      - users
      summary: Add a new User
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - in: formData
        name: fullname
        type: string
        required: true
      - in: formData
        name: country
        type: string
        required: true
      - in: formData
        name: passport_id
        type: string
        required: true
      - in: formData
        name: passport_expire
        description: dd/mm/yyyy
        type: string
        required: true
      - in: formData
        name: gender
        description: MALE=true FEMALE=fasle
        type: boolean
        required: true
      - in: formData
        name: height
        type: number
        required: true
      - in: formData
        name: weight
        type: number
        required: true
      - in: formData
        name: race
        type: string
        required: true
      - in: formData
        name: education
        type: string
        required: true
      - in: formData
        name: employee
        type: boolean
        required: true
      - in: formData
        name: skin_color
        type: string
        required: true
      - in: formData
        name: religion
        type: string
        required: true
      - in: formData
        name: smoker
        type: boolean
        required: true
      - in: formData
        name: finance
        type: string
        required: true
      - in: formData
        name: finance_alt
        type: string
        required: true
      - in: formData
        name: marriage_type
        type: string
        required: true
      - in: formData
        name: body_shape
        type: string
        required: true
      - in: formData
        name: location_ftr_mrg
        type: string
        required: true
      - in: formData
        name: marital_status
        type: string
        required: true
      - in: formData
        name: avatar
        type: file
        required: true
      - in: formData
        name: email
        type: string
        required: true
      - in: formData
        name: phone
        type: string
        required: true
      - in: formData
        name: password
        type: string
        required: true
      - in: formData
        name: self_bio
        type: string
        required: true
      - in: formData
        name: part_bio
        type: string
        required: true
      responses:
        200:
          description: OK
        405:
          description: Invalid input
    get:
      tags:
      - users
      summary: Add a new settings as test
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Response
        405:
          description: Invalid input
  /users/login:
    post:
      tags:
      - users
      summary: Add a new settings as test
      operationId: login
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Some description
        required: true
        schema:
          $ref: '#'
      responses:
        200:
          description: Response
        405:
          description: Invalid input

# host: localhost
# basePath: /zawaj/API/V1
# schemes:
#  - http
# Added by API Auto Mocking Plugin
# host: zawijni.000webhostapp.com
# basePath: /API
definitions:
  Settings:          
    type: object
    required:
      - name
      - value
    properties:
      name:
        type: string
      value:
        type: string
        
  City:          
    type: object
    required:
      - name
    properties:
      name:
        type: string
  Bundle:          
    type: object
    required:
      - name
      - description
      - price
    properties:
      name:
        type: string
      description:
        type: string
        description: Tsting Desc
      price:
        type: integer
        
  Usk:          
    type: object
    required:
      - name
      - description
      - price
    properties:
      name:
        type: string
      description:
        type: string
        description: Tsting Desc
      price:
        type: integer
        
  User:          
    type: object
    required:
      - fullname
    properties:
      fullname:
        type: string
      country:
        type: string
      passport_id:
        type: string
      passport_expire:
        description: dd/mm/yyyy
        type: string
        required: true
      gender:
        description: MALE=true FEMALE=fasle
        type: boolean
        required: true
      height:
        type: number
        required: true
      weight:
        type: number
        required: true
      race:
        type: string
        required: true
      education:
        type: string
        required: true
      employee:
        type: boolean
        required: true
     skin_color:
        type: string
        required: true
      religion:
        type: string
        required: true
      smoker:
        type: boolean
        required: true
      finance:
        type: string
        required: true
      finance_alt:
        type: string
        required: true
      marriage_type:
        type: string
        required: true
      body_shape:
        type: string
        required: true
      location_ftr_mrg:
        type: string
        required: true
      marital_status:
        type: string
        required: true
      avatar:
        type: file
        required: true
      email:
        type: string
        required: true
      phone:
        type: string
        required: true
      password:
        type: string
        required: true
      self_bio:
        type: string
        required: true
      part_bio:
        type: string
        required: true
schemes:
 - https
 - http
# Added by API Auto Mocking Plugin
#https://zwajni.com/api/users
host: zwajni.com
basePath: /api